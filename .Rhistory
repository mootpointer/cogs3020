ggplot(d, aes(x, fx)) +
geom_point()
ggplot(d, aes(x, fx)) +
geom_point()
library(dat.table)
library(data.table)
library(ggplot2)
x <- -100:100
fx <- dnorm(x)
d <- data.table(x, fx)
ggplot(d, aes(x, fx)) +
geom_point()
x <- -1:0.01:1
fx <- dnorm(x)
d <- data.table(x, fx)
ggplot(d, aes(x, fx)) +
geom_point()
x
x <- seq(-1, 1, 0.01)
fx <- dnorm(x)
d <- data.table(x, fx)
ggplot(d, aes(x, fx)) +
geom_point()
x <- seq(-10, 10, 0.01)
fx <- dnorm(x)
d <- data.table(x, fx)
ggplot(d, aes(x, fx)) +
geom_point()
?dnorm
x <- seq(-5, 5, 0.01)
fx <- dnorm(x)
d <- data.table(x, fx)
ggplot(d, aes(x, fx)) +
geom_point()
---
title: "Lecture 7"
author: "Author: Matthew J. Cossley"
date: "Last update: `r format(Sys.time(), '%d %B, %Y')`"
output:
html_document:
toc: true
toc_float:
collapsed: true
smooth_scroll: true
toc_depth: 3
fig_caption: yes
# code_folding: show
number_sections: false
theme: cerulean
fontsize: 14pt
---
## The Normal Distribution
x <- seq(-5, 5, 0.01)
x <- seq(-5, 5, 0.01)
fx <- dnorm(x)
d <- data.table(x, fx)
ggplot(d, aes(x, fx)) +
geom_point()
?dbinom
d
dd
x <- seq(-5, 5, 0.01)
fx <- dnorm(x, 0, 1)
y <- seq(5, 15, 1)
fy <- dbinom(y, 15, 0.5)
d <- data.table(x, fx, y, fy)
dd <- melt(d, measure.vars=c('x','fx','y','fy'))
d
dd
dd <- melt(d, measure.vars=c('fx','fy'))
dd
dd <- melt(d, measure.vars=c('x','fx','y','fy'))
dd
dd
dd <- melt(d, id.vars=c('x','y'), measure.vars=c('fx','fy'))
dd
x <- seq(-5, 5, 0.01)
fx <- dnorm(x, 0, 1)
d_norm <- data.table(id='normal', x=x, fx=fx)
x <- seq(5, 15, 1)
fx <- dbinom(y, 15, 0.5)
d_binom <- data.table(id='binomial', x=x, fx=fx)
d_norm
d_binom
rbind(d_binom, d_norm)
dd <- rbind(d_binom, d_norm)
dd <- rbind(d_binom, d_norm)
ggplot(dd, aes(x, fx)) +
geom_point() +
facet_wrap(~id)
x <- seq(-5, 5, 0.01)
fx <- dnorm(x, 0, 1)
d_norm <- data.table(id='normal', x=x, fx=fx)
x <- seq(0, 15, 1)
fx <- dbinom(x, 15, 0.5)
d_binom <- data.table(id='binomial', x=x, fx=fx)
dd <- rbind(d_binom, d_norm)
ggplot(dd, aes(x, fx)) +
geom_point() +
facet_wrap(~id)
ggplot(dd, aes(x, fx)) +
geom_point() +
facet_wrap(~id, scales='free')
x <- seq(0, 15, 1)
fx <- dbinom(x, 15, 1/15)
d_binom <- data.table(id='binomial', x=x, fx=fx)
dd <- rbind(d_binom, d_norm)
ggplot(dd, aes(x, fx)) +
geom_point() +
facet_wrap(~id, scales='free')
x <- seq(-5, 5, 0.01)
fx <- dnorm(x, 0, 1)
d_norm <- data.table(id='normal', x=x, fx=fx)
x <- seq(0, 15, 1)
fx <- dbinom(x, 15, 0.5)
d_binom <- data.table(id='binomial', x=x, fx=fx)
dd <- rbind(d_binom, d_norm)
ggplot(dd, aes(x, fx)) +
geom_point() +
facet_wrap(~id, scales='free')
plot(cars)
plot(cars)
str(cars)
d
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(curl)
d <- fread("https://crossley.github.io/cogs2020/data/criterion_learning/data_table/data_table_crit_learn.csv")
d
d
d[exp == 'Experiment 1'] == d[exp == 'Experiment 1']
d[exp == 'Experiment 1'] == d[exp == 'Experiment 2']
knitr::opts_chunk$set(echo = TRUE)
d <- fread('https://crossley.github.io/cogs2020/data/criterion_learning/data_table/data_table_crit_learn.csv')
library(data.table)
d <- fread('https://crossley.github.io/cogs2020/data/criterion_learning/data_table/data_table_crit_learn.csv')
d
i
d
d <- d[exp != 2]
d
d
d[, exp := NA]
d
d[, exp := NULL]
d
d[, unique(nps)]
d
?fwrite
fwrite(d, 'data/criterion_learning/data_table/data_table_crit_learn.csv')
d <- fread('https://crossley.github.io/cogs2020/data/criterion_learning/data_table/data_table_crit_learn.csv')
# d <- d[exp != 2]
# d[, exp := NULL]
# d[, unique(nps)]
d
library(data.table)
# d <- fread('https://crossley.github.io/cogs2020/data/criterion_learning/data_table/data_table_crit_learn.csv')
# d <- d[exp != 2]
# d[, exp := NULL]
# d[, unique(nps)]
# fwrite(d, 'data/criterion_learning/data_table/data_table_crit_learn.csv')
d <- fread('data/criterion_learning/data_table/data_table_crit_learn.csv')
d
load("~/Dropbox/teaching/2021/cogs2020/live_course_material/lecture_1.Rmd")
load("~/Dropbox/teaching/2021/cogs2020/live_course_material/lecture_1.Rmd")
library(data.table)
rand()
randu()
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II',)
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II')
y <- c('a', 'a', 'b', 'b', 'c', 'c')
z <- 1:6
d <- data.table(x, y, z)
d
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- 1:12
d <- data.table(x, y, z)
d[x=='II']
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- 1:12
d <- data.table(x, y, z)
d[x=='II']
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- 1:12
d <- data.table(x, y, z)
d[x=='II']
d[, y]
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- 1:12
d <- data.table(x, y, z)
d[x=='II']
d[, y]
d[, .(y)]
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- 1:12
d <- data.table(x, y, z)
d[x=='II']
d[, y]
d[, .(y)]
d[, .(x, y)]
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- 1:12
d <- data.table(x, y, z)
d[x=='II']
d[, y]
d[, .(y)]
d[, .(y, z)]
d[x=='II', .(y, z)]
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- 1:12
d <- data.table(x, y, z)
d[x=='II']
d[, y]
d[, .(y)]
d[, .(y, z)]
d[x=='II', .(y, z)]
d[, z, .(x)]
library(data.table)
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- 1:12
d <- data.table(x, y, z)
d[x=='II']
d[, y]
d[, .(y)]
d[, .(y, z)]
d[x=='II', .(y, z)]
d[, sum(z), .(x)]
d
d[, sum(z), .(x)]
d[, sum(z), .(x, y)]
install.packages(c('data.table', 'ggplot2'))
install.packages('curl')
rnorm()
rnorm(10)
knitr::opts_chunk$set(echo = TRUE)
x <- list(3.14159, 'pi', TRUE)
x
class(1)
class(FALSE)
class(c(1, 2, 3))
'a' + 'b'
TRUE + FALSE
?data.frame
c('a', 1)
ls()
?ls
?rm()
# Create a three element list containing one numeric
# item, one `character` item, and one logical item.
x <- list(3.14159, 'pi', TRUE)
x
x
x[1]
class(x[1])
x[1][1]
x[1][[1]]
?c()
?vector
vector(10, 'numeric')
vector('numeric', 10)
list()
list(1)
?list
vector(1, 2, 3)
integer(3)
class(3)
class(integer(3))
class(TRUE)
dt
dt
?dt
# create a data table
dt <- data.table(x, y, z)
# Load the data.table library
library(data.table)
# create a data table
dt <- data.table(x, y, z)
# Create vectors to later store in a data frame
x <- c('I', 'I', 'I', 'II', 'II', 'II', 'III', 'III', 'III', 'IV', 'IV', 'IV')
y <- c('a', 'a', 'b', 'b', 'c', 'c', 'd', 'd', 'e', 'e', 'f', 'f')
z <- rnorm(12)
# Create the data frame
df <- data.frame(x, y, z)
df
# Access column x
df$x
# Load the data.table library
library(data.table)
# create a data table
dt <- data.table(x, y, z)
dt
# Select rows by passing integer indices
dt[c(2, 4)]
# Select rows by pass a logical expression
dt[x=='II']
dt
# Mix and match
dt[x=='II' & c(2, 4)]
dt
# Mix and match
dt[x=='II' & y=='b']
https://upload.wikimedia.org/wikipedia/commons/e/e8/Jk_bluesteel.jpg
dt[x=='II' & y=='b']
dt[, x]
dt[, .(x)]
dt[, .(unique(x), mean(z))]
dt[, .(sum(z), mean(z))]
mean(c('a', 'b'))
dt
reticulate::repl_python()
import sys
install.packages('reticulate')
reticulate::repl_python()
library(data.table)
install.packages('data.table')
install.packages("data.table")
\begin{align}
C_M \frac{dV}{dt} &= I - I_i \\
&= I - \sum_{ion} I_{ion}
\end{align}
$$\beta_m{V} = $4 e^{V_{\text{rest}}-V}$
library(reticulate)
use_python('/Users/mq20185996/miniconda3/bin/python')
reticulate::repl_python()
import numpy as np
reticulate::repl_python()
reticulate::repl_python()
library(reticulate)
use_python('/Users/mq20185996/miniconda3/bin/python')
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
library(data.table)
library(ggplot2)
x <- c(1, 2, 3)
y <- c(0.1, 0.4, 0.5)
d <- data.table(x, y)
d[, mu := sum(x*y)]
ggplot(d, aes(x, y)) +
geom_segment(aes(xend=x, yend=0)) +
xlab('X=x') +
ylab('P(X=x)') +
theme(aspect.ratio = 1)
reticulate::repl_python()
import numpy as np
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
